name: Rust

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  test:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up cargo cache
      uses: actions/cache@v3
      continue-on-error: false
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          target/            
        key: ${{ runner.os }}-debug-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: ${{ runner.os }}-debug-
    - run: cargo fmt --check
    - run: cargo test --verbose
  build:
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            binary: shd
          - os: windows-latest
            binary: shd.exe
          - os: macos-latest
            binary: shd            
    runs-on: ${{matrix.os}}
    steps:
      - uses: actions/checkout@v2
      - name: Set up cargo cache
        uses: actions/cache@v3
        continue-on-error: false
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/            
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-cargo-
      - run: cargo build --release
      - uses: actions/upload-artifact@v3
        with:
          name: ${{ runner.os }}-${{ matrix.binary }}
          path: target/release/${{ matrix.binary }}
          if-no-files-found: error
