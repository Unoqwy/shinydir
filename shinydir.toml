#----------------------------#
#      General Settings      #
#----------------------------#

[settings]
color = true # color terminal output
use-unicode = true # use fancy symbols in terminal output. If false defaults to ascii text

#----------------------------#
#         Directories        #
#----------------------------#

[dir."$HOME"]
allowed-dirs = [
    { name = "Downloads" },
    { name = "Pictures" },
    { name = "Desktop" },
    { name = "Videos" },
    { name = "Music" },
    { name = "Documents" },
    { pattern = "^\\." }, # allow any hidden directory
]
allowed-files = [
    { pattern = "^\\." }, # allow any hidden file
]

[dir."$HOME/Videos"]
recursive = true # sub-folders will have the same rules
recursive-ignore-children = [
    # while performing recursive check, it will ignore these child directories
    { name = ".gallery" },
    { name = "CacheClip" },
]
# no 'allowed-dirs' means any directory is valid
allowed-files = [
    { ext = "mp4" },
    { ext = "mov" },
    { ext = "mkv" },
]

[dir."$HOME/Music"]
recursive = true
allowed-files = [
    { ext = "mp3" },
    { ext = "m4a" },
    { ext = "opus" },
    { ext = "flac" },
]

[dir."$HOME/Downloads"]
allowed-dirs = [] # empty 'allowed-dirs' mean no directory is valid
# no 'allow-files' means any file is valid

#----------------------------#
#       Auto Move Rules      #
#----------------------------#

[automove]
report-info = "count" # display how many files could be
                      # automatically moved at the end of a report
                      # options are: "no", "any", "count"

[[automove.rules]]
parent = "$HOME"
match = [
    { ext = "mp4" },
    { ext = "mov" },
    { ext = "mkv" },
]
to = "$HOME/Videos"

[[automove.rules]]
parent = "$HOME/Pictures/Screenshots"
match = [
    { ext = "png" },
    { ext = "jpg" },
]
to = "$HOME/Pictures/Screenshots"

# pass each matched file to the following script that returns placement filename
# the script path is relative to the parent directory of this config file
# Note: `to` is still required! It will be the base path of any relative filename the script returns.
#       However, the script is free to return absolute paths in which case `to` will be ignored
# WARNING! This can slow down auto-move drastically, use with care! (it will not slow down count check report info count though)
to-script = "examples/dated-monthly.sh"
